server {
    listen 443;
    listen [::]:443;
    server_name _;

    root /srv/docroot;

    ssl    on;
    ssl_certificate        BOOMER_CERT;
    ssl_certificate_key    BOOMER_KEY;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    limit_conn perip 10;
    access_log off;

    location /api/events {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://boomer:3000/events;
    }

    location /api/ {
        add_header Application-Name secrets;

        #CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        if ($request_method = 'OPTIONS') {
             add_header 'Access-Control-Allow-Origin' '*' always;
             add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
             add_header 'Access-Control-Max-Age'        86400 always;
             add_header 'Access-Control-Allow-Credentials' 'true' always;
             add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
             add_header 'Content-Length' 0 always;
             add_header 'Content-Type' 'text/plain charset=UTF-8' always;
             return 204;
         }

         proxy_redirect          off;
         proxy_set_header        X-Real-IP $remote_addr;
         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header        Host $http_host;
         proxy_pass              http://boomer:3000/;
     }

}

server {
    listen 80;
    listen [::]:80;
    server_name _;

    root   /usr/share/nginx/html;
    location /.well-known/ {}  # do not redirect requests letsencrypt

    location / {  # the default location redirects to https
        return 301 https://$host$request_uri;
    }
}